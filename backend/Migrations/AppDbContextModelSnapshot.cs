// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("backend.Models.CategoriaAcquisto", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("CategorieAcquisto");
                });

            modelBuilder.Entity("backend.Models.RichiestaAcquisto", b =>
                {
                    b.Property<int>("RichiestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataApprovazione")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRichiesta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oggetto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantita")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UtenteApprovazioneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UtenteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RichiestaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UtenteApprovazioneId");

                    b.HasIndex("UtenteId");

                    b.ToTable("RichiesteAcquisto");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ruolo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.RichiestaAcquisto", b =>
                {
                    b.HasOne("backend.Models.CategoriaAcquisto", "Categoria")
                        .WithMany("Richieste")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "UtenteApprovazione")
                        .WithMany()
                        .HasForeignKey("UtenteApprovazioneId");

                    b.HasOne("backend.Models.User", "Utente")
                        .WithMany()
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Utente");

                    b.Navigation("UtenteApprovazione");
                });

            modelBuilder.Entity("backend.Models.CategoriaAcquisto", b =>
                {
                    b.Navigation("Richieste");
                });
#pragma warning restore 612, 618
        }
    }
}
